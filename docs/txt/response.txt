class AuthEngineResponse(**kwarg):
	AuthEngineResponse serves as a base class for various response objects
	returned by methods within the AuthEngine and the ManagementEngine class.
	It provides a standardized way to access response data and check for
	successful operations.

	These are the property available in a user object:

	AuthEngineResponse.access_token
		Access token received from the operation (if available).

	AuthEngineResponse.refresh_token
		Refresh token received from the operation (if available).
		
	AuthEngineResponse.id_token
		ID token received from the operation (if available).

	AuthEngineResponse.token_type
		Type of the access token (if available).

	AuthEngineResponse.expires_in
		Expiration time of the access token (if available).

	AuthEngineResponse.message
		Message received from the Auth0 endpoint (if applicable).

	These are the methods available in a user object:
	
	AuthEngineResponse.__bool__()
		Returns the value of the private variable _bool. It's subclasses
		defines the value of _bool depending on the result of an operation.
	
	AuthEngineResponse.__str__()
		Returns a formatted string representing the response object. The string
		is formatted using pprint.pformat().
	
	AuthEngineResponse.__repr__()
		Returns a formatted string representing all key-value pairs of the
		response. The string is formatted using pprint.pformat().
	
	AuthEngineResponse.__iter__()
		Allows iterating over publicly accessible variables of the response
		object. (Public variables:
		https://docs.python.org/3/tutorial/classes.html#private-variables)

	Inheritance:
		User: Represents a successful authentication and provides user
			information.

		AuthEngineError: Represents an error encountered during an operation
			and contains detailed error information.
	
	Example Usage:

	```
	# Successful authentication
	response = auth_engine.signin(request, username="johndoe", password="secret")
	if response:
	    user = response
	    print(f"User ID: {user.id}")
	else:
	    print(f"Error: {response.error}")
	
	# Refreshing access token
	response = auth_engine.refresh_access_token(refresh_token="refresh_token")
	if response:
	    print(f"Access token refreshed: {response.access_token}")
	else:
	    print(f"Error: {response.error}")

	```
